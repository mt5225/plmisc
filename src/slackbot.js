// Generated by CoffeeScript 1.9.2
var Slack, isDirect, makeMention, slack, token;

Slack = require('slack-client');

token = 'xoxb-5042459146-mKyVHVNRYWRl80BxTb3Kqftb';

slack = new Slack(token, true, true);

makeMention = function(userId) {
  return '<@' + userId + '>';
};

isDirect = function(userId, messageText) {
  var userTag;
  userTag = makeMention(userId);
  return messageText && messageText.length >= userTag.length && messageText.substr(0, userTag.length) === userTag;
};

slack.on('open', function() {
  var channels, groups;
  channels = Object.keys(slack.channels).map(function(k) {
    return slack.channels[k];
  }).filter(function(c) {
    return c.is_member;
  }).map(function(c) {
    return c.name;
  });
  groups = Object.keys(slack.groups).map(function(k) {
    return slack.groups[k];
  }).filter(function(g) {
    return g.is_open && !g.is_archived;
  }).map(function(g) {
    return g.name;
  });
  console.log('Welcome to Slack. You are ' + slack.self.name + ' of ' + slack.team.name);
  if (channels.length > 0) {
    console.log('You are in: ' + channels.join(', '));
  } else {
    console.log('You are not in any channels.');
  }
  if (groups.length > 0) {
    console.log('As well as: ' + groups.join(', '));
  }
});

slack.on('message', function(message) {
  var channel, trimmedMessage, user;
  channel = slack.getChannelGroupOrDMByID(message.channel);
  user = slack.getUserByID(message.user);
  if (message.type === 'message' && isDirect(slack.self.id, message.text)) {
    trimmedMessage = message.text.substr(makeMention(slack.self.id).length).trim();
    channel.send(user.real_name + ' just said: ' + trimmedMessage);
  }
});

slack.login();
