// Generated by CoffeeScript 1.9.2
var accesskey, config, fs, https, keenclient, keenio;

https = require('https');

fs = require('fs');

accesskey = require('./accesskey').accesskey;

config = require('./config');

keenio = require('keen.io');

keenclient = keenio.configure({
  projectId: config.keen_project_id,
  writeKey: config.keen_writekey
});

accesskey.getKey(function(access_token) {
  var getUserList;
  console.log("AccesKey =  " + access_token);
  return getUserList = (function() {
    var options, req;
    console.log("==> get openid list <==");
    options = {
      host: 'api.weixin.qq.com',
      port: 443,
      path: "/cgi-bin/user/get?access_token=" + access_token,
      method: 'GET',
      headers: {
        accept: '*/*'
      }
    };
    req = https.request(options, function(res) {
      var body;
      body = '';
      res.on('data', function(d) {
        return body = body + d;
      });
      return res.on('end', function() {
        var callAPI, data, numberOfRecord, openidArray;
        console.log("===> USER DATA <=== ");
        data = JSON.parse(body);
        console.log("Number of users = " + data['count']);
        openidArray = data['data']['openid'];
        numberOfRecord = 0;
        callAPI = function(openidList) {
          var openid;
          openid = openidList.shift();
          options.path = "/cgi-bin/user/info?access_token=" + access_token + "&openid=" + openid;
          req = https.request(options, function(res) {
            body = '';
            res.on('data', function(d) {
              return body = body + d;
            });
            return res.on('end', function() {
              var dt, err;
              try {
                data = JSON.parse(body);
                dt = new Date(parseInt(data.subscribe_time) * 1000);
                data.keen = {
                  "timestamp": dt.toISOString()
                };
                return keenclient.addEvent('agh3', data, function(err, res) {
                  if (err) {
                    return console.log(err);
                  } else {
                    return console.log(res);
                  }
                });
              } catch (_error) {
                err = _error;
                return console.log(err);
              } finally {
                if (openidArray.length) {
                  console.log("numberOfRecord = " + numberOfRecord);
                  numberOfRecord += 1;
                  callAPI(openidList);
                }
              }
            });
          });
          return req.end();
        };
        return callAPI(openidArray);
      });
    });
    return req.end();
  })();
});
